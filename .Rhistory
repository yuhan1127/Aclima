cat_age44_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[9:12], age_vars$name[32:35]))
cat_age45_64_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[13:17], age_vars$name[36:40]))
cat_age65_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[18:23], age_vars$name[41:46]))
cat_age24_bg <- cat_age24_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age44_bg <- cat_age44_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age45_64_bg <- cat_age45_64_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age65_bg <- cat_age65_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
# obtain educational attainment data for the population 25 years and over
edu_vars <- acs5_19_var[8156:8179,]
cat_edu_bg <- get_acs(geography = "block group",
variables = edu_vars$name,
state = "CA", county = "Alameda", geometry = TRUE)
# obtain percent estimate
cat_edu_bg <- cat_edu_bg %>% group_by(NAME) %>%
mutate(percent = round(estimate/sum(estimate)*100, 1))
###### cf. Regular high school diploma vs. GED or alternative credential
###### cf. GED is an alternative to the US high school diploma
# in reference - Hajat et al. (2013), *for neighborhood SES index data,*
# Education was characterized as the percentage of persons with at least a high school degree
# and the percentage with at least a Bachelorâ€™s degree.
# obtain percent of person 25 or older with at least high school education
high_bg <- cat_edu_bg %>%
filter(variable %in% edu_vars$name[16:24])
high_bg <- high_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
# obtain percent of person 25 or older with at least a Bachelor's degree
bachelor_bg <- cat_edu_bg %>%
filter(variable %in% edu_vars$name[21:24])
bachelor_bg <- bachelor_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
# obtain *median* household income data
med_inc_bg <- get_acs(geography = "block group",
variables = c(med_inc = "B19013_001"),
state = "CA", county = "Alameda", geometry = TRUE)
# obtain categorical household income estimates data
inc_vars <- acs5_19_var[11083:11098,]
cat_inc_bg <- get_acs(geography = "block group",
variables = inc_vars$name,
state = "CA", county = "Alameda", geometry = TRUE)
cat_inc_bg <- cat_inc_bg %>% group_by(NAME) %>%
mutate(percent = round(estimate/sum(estimate)*100, 1))
# obtain percent of households with $100,000 or more income in the past 12 months
# Median household income of Alameda County: 99406 (source: ACS 2015-2019)
hhinc_abv_bg <- cat_inc_bg %>%
filter(variable %in% inc_vars$name[13:16])
hhinc_abv_bg <- hhinc_abv_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
# obtain unemployed among civilians 16 and over in the labor force
empst_bg <- get_acs(geography = "block group",
variables = c("B23025_004", "B23025_005"),
state = "CA", county = "Alameda", geometry = TRUE)
empst_bg <- empst_bg %>% group_by(NAME) %>%
mutate(percent = round(estimate/sum(estimate)*100, 1))
unemp_bg <- empst_bg %>% filter(variable == "B23025_005")
head(unemp_bg)
head(white_bg)
help("inner_join")
col(white_bg)
colnames(white_bg)
colnames(white_bg)[7]
colnames(white_bg)[7]<-race_white_per
colnames(white_bg)[7]<-"race_white_per"
colnames(white_bh)
colnames(white_bg)
colnames(aa_bg)[7]<-"race_aa_per"
colnames(asian_bg)[7]<-"race_asian_per"
colnames(other_bg)[7]<-"race_other_per"
colnames(hisp_bg)[7]<-"race_hisp_per"
head(a_bg)
head(aa_bg)
data_race<-white_bg%>%inner_join(aa_bg,by=GEOID)%>%
inner_join(asian_bg,by=GEOID)%>%
inner_join(hisp_bg,by=GEOID)%>%
inner_join(other_bg,by=GEOID)
data_race<-white_bg%>%inner_join(aa_bg,by="GEOID")%>%
inner_join(asian_bg,by="GEOID")%>%
inner_join(hisp_bg,by="GEOID")%>%
inner_join(other_bg,by="GEOID")
head(other_bg)
other_bg <- race_bg %>% filter(variable %in% c("B03002_005", "B03002_007", "B03002_008", "B03002_009"))
other_bg <- other_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
colnames(white_bg)[7]<-"race_white_per"
colnames(aa_bg)[7]<-"race_aa_per"
colnames(asian_bg)[7]<-"race_asian_per"
colnames(other_bg)[7]<-"race_other_per"
colnames(hisp_bg)[7]<-"race_hisp_per"
data_race<-white_bg%>%inner_join(aa_bg,by="GEOID")%>%
inner_join(asian_bg,by="GEOID")%>%
inner_join(hisp_bg,by="GEOID")%>%
inner_join(other_bg,by="GEOID")
colnames(data_race)
help(select)
data_race<-select(GEOID,starts_with("race"))
data_race<-select("GEOID",starts_with("race"))
data_race<-select(c("GEOID",starts_with("race")))
data_race<-select("GEOID"&starts_with("race"))
data_race<-select(start_with("GEOID") & starts_with("race"))
data_race<-select(starts_with("GEOID") & starts_with("race"))
data_race<-select(c("GEOID",starts_with("race")))
data_race<-select(starts_with("race"))
data_race<-select(starts_with("race"))
data_race<-data_race%>%select(c("GEOID",starts_with("race")))
head(data_race)
colnames(data_ra)
colnames(data_race)
other_bg <- race_bg %>% filter(variable %in% c("B03002_005", "B03002_007", "B03002_008", "B03002_009"))
other_bg <- other_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
colnames(other_bg)
colnames(other_bg)["percent"]
colnames(other_bg)[c("percent")]<
colnames(other_bg)[c("percent")]
colnames(other_bg)[3]
colnames(white_bg)[7]<-"race_white_per"
colnames(aa_bg)[7]<-"race_aa_per"
colnames(asian_bg)[7]<-"race_asian_per"
colnames(other_bg)[3]<-"race_other_per"
colnames(hisp_bg)[7]<-"race_hisp_per"
data_race<-white_bg%>%inner_join(aa_bg,by="GEOID")%>%
inner_join(asian_bg,by="GEOID")%>%
inner_join(hisp_bg,by="GEOID")%>%
inner_join(other_bg,by="GEOID")
data_race<-data_race%>%select(c("GEOID",starts_with("race")))
head(data_race)
80.8=1.8=17.4
80.8+1.8+17.4
med_age_bg <- get_acs(geography = "block group",
variables = c(med_age = "B01002_001"),
state = "CA", county = "Alameda", geometry = TRUE)
head(med_age_bg)
age_vars <- acs5_19_var[c(3:25,27:49),]
age_vars
head(age_vars,20)
# Further investigation
cat_age24_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[1:8], age_vars$name[24:31]))
cat_age44_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[9:12], age_vars$name[32:35]))
cat_age45_64_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[13:17], age_vars$name[36:40]))
cat_age65_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[18:23], age_vars$name[41:46]))
cat_age24_bg <- cat_age24_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age44_bg <- cat_age44_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age45_64_bg <- cat_age45_64_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age65_bg <- cat_age65_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
head(cat_age65_bg)
cat_age24_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[1:8], age_vars$name[24:31]))
cat_age44_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[9:12], age_vars$name[32:35]))
cat_age45_64_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[13:17], age_vars$name[36:40]))
cat_age65_bg <- cat_age_bg %>%
filter(variable %in% c(age_vars$name[18:23], age_vars$name[41:46]))
cat_age24_bg <- cat_age24_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age44_bg <- cat_age44_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age45_64_bg <- cat_age45_64_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
cat_age65_bg <- cat_age65_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
head(cat_age24_bg)
colnames(cat_age24_bg)[3]
colnames(med_age)[4]<-"age_median"
med_age_bg <- get_acs(geography = "block group",
variables = c(med_age = "B01002_001"),
state = "CA", county = "Alameda", geometry = TRUE)
colnames(med_age)[4]<-"age_median"
colnames(med_age_bg)[4]
colnames(med_age_bg)[4]<-"age_median"
colnames(cat_age24_bg)[3]<-"age_24_per"
colnames(cat_age24_bg)[3]<-"age_25_44_per"
colnames(cat_age24_bg)[3]<-"age_45_64_per"
colnames(cat_age24_bg)[3]<-"age_65_per"
colnames(med_age_bg)[4]<-"age_median"
colnames(cat_age24_bg)[3]<-"age_24_per"
colnames(cat_age44_bg)[3]<-"age_25_44_per"
colnames(cat_age45_64_bg)[3]<-"age_45_64_per"
colnames(cat_age65_bg)[3]<-"age_65_per"
data_age<-med_age_bg%>%inner_join(cat_age24_bg,by="GEOID")%>%
inner_join(cat_age44_bg,by="GEOID")%>%
inner_join(cat_age45_64_bg,by="GEOID")%>%
inner_join(cat_age65_bg,by="GEOID")
head(cat_age24_bg)
head(white_bg)
head(med_age_bg)
head(cat_age44_bg)
head(cat_age45_64_bg)
head(cat_age65_bg)
data_age<-med_age_bg%>%inner_join(cat_age24_bg,by="GEOID")%>%
inner_join(cat_age44_bg,by="GEOID")%>%
inner_join(cat_age45_64_bg,by="GEOID")%>%
inner_join(cat_age65_bg,by="GEOID")
head(aa_bg)
head(cat_age44_bg)
data_age<-as.data.frame(med_age_bg)%>%
inner_join(as.data.frame(cat_age24_bg),by="GEOID")%>%
inner_join(as.data.frame(cat_age44_bg),by="GEOID")%>%
inner_join(as.data.frame(cat_age45_64_bg),by="GEOID")%>%
inner_join(as.data.frame(cat_age65_bg),by="GEOID")
head(data_age)
data_age<-data_age%>%select(c("GEOID",starts_with("age")))
head(data_age)
edu_vars <- acs5_19_var[8156:8179,]
edu_vars
edu_vars <- acs5_19_var[8156:8179,]
cat_edu_bg <- get_acs(geography = "block group",
variables = edu_vars$name,
state = "CA", county = "Alameda", geometry = TRUE)
# obtain percent estimate
cat_edu_bg <- cat_edu_bg %>% group_by(NAME) %>%
mutate(percent = round(estimate/sum(estimate)*100, 1))
###### cf. Regular high school diploma vs. GED or alternative credential
###### cf. GED is an alternative to the US high school diploma
# in reference - Hajat et al. (2013), *for neighborhood SES index data,*
# Education was characterized as the percentage of persons with at least a high school degree
# and the percentage with at least a Bachelorâ€™s degree.
# obtain percent of person 25 or older with at least high school education
high_bg <- cat_edu_bg %>%
filter(variable %in% edu_vars$name[16:24])
high_bg <- high_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
# obtain percent of person 25 or older with at least a Bachelor's degree
bachelor_bg <- cat_edu_bg %>%
filter(variable %in% edu_vars$name[21:24])
bachelor_bg <- bachelor_bg %>% group_by(NAME) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
head(high_bg)
high_bg <- cat_edu_bg %>%
filter(variable %in% edu_vars$name[16:24])
high_bg <- high_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
# obtain percent of person 25 or older with at least a Bachelor's degree
bachelor_bg <- cat_edu_bg %>%
filter(variable %in% edu_vars$name[21:24])
bachelor_bg <- bachelor_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
head(high_bg)
colnames(high_bg)[3]<-"edu_>high_per"
colnames(bachelor_bg)[3]<-"edu_>bachelor_per"
data_age<-as.data.frame(high_bg)%>%
inner_join(as.data.frame(bachelor_bg),by="GEOID")
colnames(high_bg)[3]<-"edu_>high_per"
colnames(bachelor_bg)[3]<-"edu_>bachelor_per"
data_edu<-as.data.frame(high_bg)%>%
inner_join(as.data.frame(bachelor_bg),by="GEOID")
inc_vars <- acs5_19_var[11083:11098,]
inc_vars
cat_inc_bg <- get_acs(geography = "block group",
variables = inc_vars$name,
state = "CA", county = "Alameda", geometry = TRUE)
cat_inc_bg <- cat_inc_bg %>% group_by(NAME) %>%
mutate(percent = round(estimate/sum(estimate)*100, 1))
hhinc_abv_bg <- cat_inc_bg %>%
filter(variable %in% inc_vars$name[13:16])
hhinc_abv_bg <- hhinc_abv_bg %>% group_by(GEOID) %>%
summarise(estimate = sum(estimate), percent = sum(percent))
head(hhinc_abv_bg)
# ACS Income: Median + Category ($100,000 cut-off)
colnames(hhinc_abv_bg)[3]<-"hhinc_>100000_per"
data_hhinc<-data_hhinc%>%select(c("GEOID",starts_with("hhinc")))
colnames(hhinc_abv_bg)[3]<-"hhinc_>100000_per"
data_hinc<-hhinc_abv_bg
data_hhinc<-data_hhinc%>%select(c("GEOID",starts_with("hhinc")))
colnames(hhinc_abv_bg)[3]<-"hhinc_>100000_per"
data_hhinc<-hhinc_abv_bg
data_hhinc<-data_hhinc%>%select(c("GEOID",starts_with("hhinc")))
med_inc_bg <- get_acs(geography = "block group",
variables = c(med_inc = "B19013_001"),
state = "CA", county = "Alameda", geometry = TRUE)
colnames(med_inc_bg)
colnames(med_inc_bg)[4]<-"hhinc_median"
colnames(hhinc_abv_bg)[3]<-"hhinc_>100000_per"
data_hhinc<-as.data.frame(med_inc_bg)%>%
inner_join(as.data.frame(hhinc_abv_bg),by="GEOID")
data_hhinc<-data_hhinc%>%select(c("GEOID",starts_with("hhinc")))
head(data_hhinc)
# obtain unemployed among civilians 16 and over in the labor force
empst_bg <- get_acs(geography = "block group",
variables = c("B23025_004", "B23025_005"),
state = "CA", county = "Alameda", geometry = TRUE)
empst_bg <- empst_bg %>% group_by(GEOID) %>%
mutate(percent = round(estimate/sum(estimate)*100, 1))
unemp_bg <- empst_bg %>% filter(variable == "B23025_005")
head(unemp_bg)
head(data_hhinc)
head(hhinc_abv_bg)
head(unemp_bg)
colnames(unemp_bg)[7] <- "unemp_per"
colnames(unemp_bg)[7] <- "unemp_per"
data_unemp<-unemp_bg
data_unemp<-data_unemp%>%select(c("GEOID",starts_with("unemp")))
head(data_unemp)
head(alameda)
alameda<- get_acs(state = "CA", county = "Alameda", geography = "block group",
variables = "B19013_001",geometry = TRUE)
head(alameda)
colnames(unemp_bg)[7] <- "unemp_per"
data_unemp<-unemp_bg
data_unemp<-data_unemp%>%select(c("GEOID","unemp_per","geometry"))
head(data_unemp)
Alameda_ACS<-data_race%>%
inner_join(data_age,by="GEOID")%>%
inner_join(data_edu,by="GEOID")%>%
inner_join(data_hhinc,by="GEOID")%>%
inner_join(data_unemp,by="GEOID")
head(Alameda_ACS)
colnames(Alameda_ACS)
head(data_race)
head(data_age)
colnames(med_age_bg)[4]<-"age_median"
colnames(cat_age24_bg)[3]<-"age_24_per"
colnames(cat_age44_bg)[3]<-"age_25_44_per"
colnames(cat_age45_64_bg)[3]<-"age_45_64_per"
colnames(cat_age65_bg)[3]<-"age_65_per"
data_age<-as.data.frame(med_age_bg)%>%
inner_join(as.data.frame(cat_age24_bg),by="GEOID")%>%
inner_join(as.data.frame(cat_age44_bg),by="GEOID")%>%
inner_join(as.data.frame(cat_age45_64_bg),by="GEOID")%>%
inner_join(as.data.frame(cat_age65_bg),by="GEOID")
data_age<-data_age%>%select(c("GEOID",starts_with("age")))
head(data_age)
head(data_edu)
# ACS Education: Catergory
colnames(high_bg)[3]<-"edu_>high_per"
colnames(bachelor_bg)[3]<-"edu_>bachelor_per"
data_edu<-as.data.frame(high_bg)%>%
inner_join(as.data.frame(bachelor_bg),by="GEOID")
data_edu<-data_edu%>%select(c("GEOID",starts_with("edu")))
head(data_edu)
colnames(med_inc_bg)[4]<-"hhinc_median"
colnames(hhinc_abv_bg)[3]<-"hhinc_>100000_per"
data_hhinc<-as.data.frame(med_inc_bg)%>%
inner_join(as.data.frame(hhinc_abv_bg),by="GEOID")
data_hhinc<-data_hhinc%>%select(c("GEOID",starts_with("hhinc")))
head(data_hhinc)
colnames(unemp_bg)[7] <- "unemp_per"
data_unemp<-unemp_bg
data_unemp<-data_unemp%>%select(c("GEOID","unemp_per","geometry"))
head(data_unemp)
Alameda_ACS<-data_race%>%
inner_join(data_age,by="GEOID")%>%
inner_join(data_edu,by="GEOID")%>%
inner_join(data_hhinc,by="GEOID")%>%
inner_join(data_unemp,by="GEOID")
colnames(Alameda_ACS)
head(Alameda_ACS)
Alameda_ACS[,ncol(Alameda_ACS)]
alameda<-data_race%>%
inner_join(data_age,by="GEOID")%>%
inner_join(data_edu,by="GEOID")%>%
inner_join(data_hhinc,by="GEOID")%>%
inner_join(data_unemp,by="GEOID")
head(alameda)
aclima<-fread("/Users/why/Desktop/uw/course/2021 winter/Aclima/Aclima_0114.csv")
aclima_no2<-aclima[modality=="no2"&metric=="mean"]
## check negative value
nrow(aclima_no2[aclima_no2$value<0,])
aclima_no2<-with(aclima_no2,ifelse(value>0,value,0.001))
head(aclima)
head(aclima_no2)
aclima_no2<-aclima[modality=="no2"&metric=="mean"]
aclima_no2$value<-with(aclima_no2,ifelse(value>0,value,0.001))
head(aclima_no2)
summary(aclima_no2$value)
coordiates(aclima_remove)<-c("lon","lat")
coordiates(aclima_no2<-c("lon","lat")
## convert to spatial data frame
coordiates(aclima_no2<-c("lon","lat"))
coordinates(aclima_no2<-c("lon","lat"))
help("coordinates")
coordinates(aclima_no2<)-c("lon","lat")
coordinates(aclima_no2)<-c("lon","lat")
head(aclima_no2)
aclima_no2<-aclima[modality=="no2"&metric=="mean"]
## check negative value
nrow(aclima_no2[aclima_no2$value<0,])
## replace negative value with small positive value
## (!!!should use detection limit!!!)
aclima_no2$value<-with(aclima_no2,ifelse(value>0,value,0.001))
## check outlier (small percentage, keep those datapoints)
summary(aclima_no2$value)
## convert to spatial data frame
coordinates(aclima_no2)<-c("lon","lat")
head(aclima_no2)
aclima_coord<-sf::st_as_sf(aclima_no2, coords=c("lon","lat"), crs=4326)
aclima_coord= st_set_crs(aclima_coord, 4326)
alameda_4326<- st_transform(alameda,crs=4326)
int <- sf::st_intersects(aclima_coord, alameda_4326)
ind<-sapply(int,FUN=function(x){
length(x)==0
})
alameda<-st_as_sf(alameda,coords="geometry")
class(alameda)
str(alameda)
alameda_4326<- st_transform(alameda,crs=4326)
alameda<-st_as_sf(alameda,sf_column_name ="geometry")
class(alameda)
aclima_coord<-sf::st_as_sf(aclima_no2, coords=c("lon","lat"), crs=4326)
aclima_coord= st_set_crs(aclima_coord, 4326)
alameda_4326<- st_transform(alameda,crs=4326)
int <- sf::st_intersects(aclima_coord, alameda_4326)
ind<-sapply(int,FUN=function(x){
length(x)==0
})
ind
table(ind)
# DATA MERGING: merge aclima and acs
aclima_merge<-aclima_coord[!ind,]
aclima_merge$geoid <- as.character(alameda_4326$GEOID[unlist(int)])
data_merge_income<-merge(as.data.frame(aclima_merge),
as.data.frame(alameda),
by.x="geoid",by.y="GEOID")
## only keep observation without estimate missingness
data_merge_income<-subset(data_merge_income,!is.na(estimate))
## transform data from data frame object to sf object
data_merge_income<-sf::st_as_sf(data_merge_income, sf_column_name=c("geometry.x"))
st_geometry(data_merge_income) <- "geometry.x"
aclima_merge<-aclima_coord[!ind,]
aclima_merge$geoid <- as.character(alameda_4326$GEOID[unlist(int)])
data_merge<-merge(as.data.frame(aclima_merge),
as.data.frame(alameda),
by.x="geoid",by.y="GEOID")
summary(data_merge)
pop <- get_acs(geography = "block group",
variables = "B01003_001",
state = "CA", county = "Alameda", geometry = TRUE)
nrow(pop)
nrow(unique(pop$GEOID))
length(unique(pop$GEOID))
head(alameda$GEOID)
length(alameda$GEOID[1])
head(data_merge)
library(sp)
library(lattice)
library(data.table)
library(gstat)
library(tidycensus)
library(tidyverse)
library(sf)
library(RColorBrewer)
library(spNNGP)
census_api_key("ea4f942d5bb621e8b0f85b5bacdc4864cbd0ef26",install=TRUE)
readRenviron("~/.Renviron")
options(tigris_use_cache = TRUE)
# ACLIMA DATA
aclima<-fread("/Users/why/Desktop/uw/course/2021 winter/Aclima/Aclima_0114.csv")
aclima_no2<-aclima[modality=="no2"&metric=="mean"]
## check negative value
nrow(aclima_no2[aclima_no2$value<0,])
## replace negative value with small positive value
## (!!!should use detection limit!!!)
aclima_no2$value<-with(aclima_no2,ifelse(value>0,value,0.001))
## check outlier (small percentage, keep those datapoints)
summary(aclima_no2$value)
## convert to spatial data frame
coordinates(aclima_no2)<-c("lon","lat")
# ACS DATA
source("acs_variables.R")
alameda<-st_as_sf(alameda,sf_column_name ="geometry")
# DATA MAPPING: Map air pollutant coordinate to block group (WGS84->NAD83)
aclima_coord<-sf::st_as_sf(aclima_no2, coords=c("lon","lat"), crs=4326)
aclima_coord= st_set_crs(aclima_coord, 4326)
alameda_4326<- st_transform(alameda,crs=4326)
int <- sf::st_intersects(aclima_coord, alameda_4326)
ind<-sapply(int,FUN=function(x){
length(x)==0
})
# DATA MERGING: merge aclima and acs
aclima_merge<-aclima_coord[!ind,]
aclima_merge$geoid <- as.character(alameda_4326$GEOID[unlist(int)])
data_merge<-merge(as.data.frame(aclima_merge),
as.data.frame(alameda),
by.x="geoid",by.y="GEOID")
colnames(data_merge)[8]<-"geometry_aclima"
colnames(data_merge)[24]<-"geometry_acs"
## transform merged data from data frame object to sf object
data_merge<-sf::st_as_sf(data_merge, sf_column_name=c("geometry_aclima"))
st_geometry(data_merge)
## data_merge is ready for model fitting!!
head(data_merge)
class(data_merge)
help(st_write)
st_write(data_merge,"data_merge.shp")
data_to_wenbo<-
colnames(data_merge)
colnames(data_merge)
data_to_wenbo<-data_merge[,-24]
st_write(data_to_wenbo,"data_merge.shp")
st_write(data_to_wenbo,"data_merge.shp",delete_layer = TRUE)
colnames(data_merge)
colnames(data_to_wenbo)
colnames(data_merge)
saveRDS(data_merge,"data_merge.rds")
getwd()
readRDS("data_merge.rds")
data_to_wenbo<-readRDS("data_merge.rds")
head(data_to_wenbo)
